# Generated by Django 5.1.9 on 2025-05-24 11:14

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(max_length=50, unique=True)),
                ('customer_type', models.CharField(choices=[('residential', 'Residential'), ('commercial', 'Commercial'), ('industrial', 'Industrial'), ('institutional', 'Institutional')], default='residential', max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('phone_primary', models.CharField(max_length=15)),
                ('phone_secondary', models.CharField(blank=True, max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('service_address', models.TextField()),
                ('service_location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('is_active', models.BooleanField(default=True)),
                ('connection_date', models.DateField(blank=True, null=True)),
                ('disconnection_date', models.DateField(blank=True, null=True)),
                ('preferred_language', models.CharField(default='en', max_length=10)),
                ('sms_notifications', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'customers',
            },
        ),
        migrations.CreateModel(
            name='CustomerNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('outage', 'Service Outage'), ('maintenance', 'Planned Maintenance'), ('restoration', 'Service Restoration'), ('ticket_update', 'Ticket Update'), ('general', 'General Information')], max_length=20)),
                ('channel', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('push', 'Push Notification')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'customer_notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceOutage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outage_type', models.CharField(choices=[('planned', 'Planned'), ('unplanned', 'Unplanned')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('affected_area', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('estimated_customers_affected', models.IntegerField(default=0)),
                ('start_time', models.DateTimeField()),
                ('estimated_end_time', models.DateTimeField()),
                ('actual_end_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notification_sent', models.BooleanField(default=False)),
                ('notification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'service_outages',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('ticket_type', models.CharField(choices=[('complaint', 'Complaint'), ('request', 'Service Request'), ('inquiry', 'Inquiry'), ('report', 'Issue Report'), ('billing', 'Billing Issue')], max_length=20)),
                ('category', models.CharField(choices=[('no_water', 'No Water Supply'), ('low_pressure', 'Low Pressure'), ('leak', 'Leak/Burst'), ('quality', 'Water Quality'), ('billing', 'Billing'), ('new_connection', 'New Connection'), ('disconnection', 'Disconnection'), ('meter', 'Meter Issue'), ('other', 'Other')], max_length=20)),
                ('priority', models.CharField(choices=[('critical', 'Critical'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('pending_customer', 'Pending Customer'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20)),
                ('reporter_name', models.CharField(max_length=200)),
                ('reporter_phone', models.CharField(max_length=15)),
                ('reporter_email', models.EmailField(blank=True, max_length=254)),
                ('issue_location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('issue_address', models.TextField(blank=True)),
                ('source', models.CharField(choices=[('phone', 'Phone Call'), ('sms', 'SMS'), ('email', 'Email'), ('web', 'Web Portal'), ('mobile_app', 'Mobile App'), ('walk_in', 'Walk-in'), ('social_media', 'Social Media'), ('ussd', 'USSD')], max_length=20)),
                ('assigned_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('satisfaction_rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('satisfaction_comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sla_deadline', models.DateTimeField(blank=True, null=True)),
                ('is_sla_breached', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'tickets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('is_internal', models.BooleanField(default=False)),
                ('is_customer_visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'ticket_comments',
                'ordering': ['created_at'],
            },
        ),
    ]
